{"version":3,"sources":["components/Profile/Profile.jsx","services/color.js","components/Statistics/Statistics.jsx","components/FriendList/FriendList.jsx","components/TransactionHistory/TransactionHistory.jsx","components/App/App.jsx","index.js"],"names":["Profile","user","avatar","username","tag","location","stats","className","src","alt","followers","views","likes","getRandomColor","color","i","Math","floor","random","Statistics","map","stat","style","backgroundColor","colorSt","label","percentage","id","FriendList","friends","friend","name","isOnline","width","TransactionHistory","items","item","type","amount","currency","App","data","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"40GA+BeA,EA7BC,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACTC,EAA2CD,EAA3CC,OAAQC,EAAmCF,EAAnCE,SAAUC,EAAyBH,EAAzBG,IAAKC,EAAoBJ,EAApBI,SAAUC,EAAUL,EAAVK,MACzC,OACE,sBAAKC,UAAU,eAAf,UACE,sBAAKA,UAAU,cAAf,UACE,qBAAKC,IAAKN,EAAQO,IAAI,cAAcF,UAAU,WAC9C,mBAAGA,UAAU,OAAb,SAAqBJ,IACrB,mBAAGI,UAAU,iBAAb,SAA+B,IAAMH,IACrC,mBAAGG,UAAU,sBAAb,SAAoCF,OAGtC,qBAAIE,UAAU,QAAd,UACE,qBAAIA,UAAU,eAAd,UACE,sBAAMA,UAAU,mBAAhB,uBACA,uBAAMA,UAAU,WAAhB,cAA6BD,EAAMI,gBAErC,qBAAIH,UAAU,eAAd,UACE,sBAAMA,UAAU,mBAAhB,mBACA,uBAAMA,UAAU,WAAhB,cAA6BD,EAAMK,YAErC,qBAAIJ,UAAU,eAAd,UACE,sBAAMA,UAAU,mBAAhB,mBACA,uBAAMA,UAAU,WAAhB,cAA6BD,EAAMM,mB,MCxB9B,SAASC,IAGtB,IAFA,IACIC,EAAQ,IACHC,EAAI,EAAGA,EAAI,EAAGA,IACrBD,GAHc,mBAGGE,KAAKC,MAAsB,GAAhBD,KAAKE,WAEnC,OAAOJ,ECFT,IA4BeK,EA5BI,SAAC,GAAe,IAAbb,EAAY,EAAZA,MAIpB,OACE,0BAASC,UAAU,aAAnB,UACE,oBAAIA,UAAU,QAAd,0BACA,oBAAIA,UAAU,YAAd,SACGD,EAAMc,KAAI,SAACC,GAAD,OACT,qBAEEC,MAAO,CAAEC,gBAAiBC,KAC1BjB,UAAU,YAHZ,UAKE,sBAAMA,UAAU,QAAhB,SAAyBc,EAAKI,QAC9B,sBAAMlB,UAAU,aAAhB,SAA8Bc,EAAKK,eAL9BL,EAAKM,aCqBPC,G,MAvBI,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAGpB,OACE,oBAAItB,UAAU,cAAd,SACGsB,EAAQT,KAAI,SAACU,GACZ,IAAQ5B,EAA2B4B,EAA3B5B,OAAQ6B,EAAmBD,EAAnBC,KAAMC,EAAaF,EAAbE,SACtB,OACE,qBAAoBzB,UAAU,kBAA9B,UACE,sBAAMA,UAAWyB,EAAW,SAAW,iBACvC,qBAAKzB,UAAU,SAASC,IAAKN,EAAQO,IAAI,cAAcwB,MAAM,OAC7D,mBAAG1B,UAAU,OAAb,SAAqBwB,MAHdD,EAAOH,WCiBXO,G,MAjCY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC5B,OACE,8BACE,wBAAO5B,UAAU,sBAAjB,UACE,gCACE,qBAAIA,UAAU,YAAd,UACE,oBAAIA,UAAU,aAAd,kBACA,oBAAIA,UAAU,aAAd,oBACA,oBAAIA,UAAU,aAAd,2BAGJ,gCACG4B,EAAMf,KAAI,SAACgB,GAAD,OACT,qBAAkB7B,UAAU,mBAA5B,UACE,oBAAIA,UAAU,aAAd,SAA4B6B,EAAKC,OACjC,oBAAI9B,UAAU,aAAd,SAA4B6B,EAAKE,SACjC,oBAAI/B,UAAU,aAAd,SAA4B6B,EAAKG,aAH1BH,EAAKT,gB,4BCMXa,EAbH,WACV,OACE,8BACE,qCACE,cAAC,EAAD,CAASvC,KAAMA,IACf,cAAC,EAAD,CAAYK,MAAOmC,IACnB,cAAC,EAAD,CAAYZ,QAASA,IACrB,cAAC,EAAD,CAAoBM,MAAOO,U,MCZnCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4c98b433.chunk.js","sourcesContent":["import \"./Profile.css\";\n\nconst Profile = ({ user }) => {\n  const { avatar, username, tag, location, stats } = user;\n  return (\n    <div className=\"Profile-wrap\">\n      <div className=\"description\">\n        <img src={avatar} alt=\"User avatar\" className=\"avatar\" />\n        <p className=\"name\">{username}</p>\n        <p className=\"tag colorTitle\">{\"@\" + tag}</p>\n        <p className=\"location colorTitle\">{location}</p>\n      </div>\n\n      <ul className=\"stats\">\n        <li className=\"Profile-item\">\n          <span className=\"label colorTitle\">Followers</span>\n          <span className=\"quantity\"> {stats.followers}</span>\n        </li>\n        <li className=\"Profile-item\">\n          <span className=\"label colorTitle\">Views</span>\n          <span className=\"quantity\"> {stats.views}</span>\n        </li>\n        <li className=\"Profile-item\">\n          <span className=\"label colorTitle\">Likes</span>\n          <span className=\"quantity\"> {stats.likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Profile;\n","export default function getRandomColor() {\n  const letters = \"0123456789ABCDEF\";\n  let color = \"#\";\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\n\n// function setRandomColor() {\n//   $(\"#colorpad\").css(\"background-color\", getRandomColor());\n// }\n","import PropTypes from \"prop-types\";\nimport \"./Statistics.css\";\nimport colorSt from \"../../services/color\";\n\nconst Statistics = ({ stats }) => {\n  // console.log(colorSt());\n\n  // const { id, label, percentage } = stats;\n  return (\n    <section className=\"statistics\">\n      <h2 className=\"title\">Upload stats</h2>\n      <ul className=\"stat-list\">\n        {stats.map((stat) => (\n          <li\n            key={stat.id}\n            style={{ backgroundColor: colorSt() }}\n            className=\"Stat-item\"\n          >\n            <span className=\"label\">{stat.label}</span>\n            <span className=\"percentage\">{stat.percentage}</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nStatistics.propTypes = {\n  label: PropTypes.string,\n  percentage: PropTypes.number,\n};\n\nexport default Statistics;\n","import React from \"react\";\nimport \"./FriendList.css\";\nimport PropTypes from \"prop-types\";\n\n// const offActiv = (isActiv) => {\n//   const endStatus = [\"status\"];\n//   if (friend.isOnline === false) {\n//     endStatus.push(\"status-nActiv\");\n//   }\n//   return endStatus.join(' ');\n// };\n\nconst FriendList = ({ friends }) => {\n  //\n\n  return (\n    <ul className=\"friend-list\">\n      {friends.map((friend) => {\n        const { avatar, name, isOnline } = friend;\n        return (\n          <li key={friend.id} className=\"FriendList-item\">\n            <span className={isOnline ? \"status\" : \"statusnActiv\"}></span>\n            <img className=\"avatar\" src={avatar} alt=\"User avatar\" width=\"48\" />\n            <p className=\"name\">{name}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nFriendList.propTypes = {\n  name: PropTypes.string,\n};\n\nexport default FriendList;\n","import React from \"react\";\nimport \"./TransactionHistory.css\";\nimport PropTypes from \"prop-types\";\n\nconst TransactionHistory = ({ items }) => {\n  return (\n    <div>\n      <table className=\"transaction-history\">\n        <thead>\n          <tr className=\"top-sheet\">\n            <th className=\"sheet-item\">Type</th>\n            <th className=\"sheet-item\">Amount</th>\n            <th className=\"sheet-item\">Currency</th>\n          </tr>\n        </thead>\n        <tbody>\n          {items.map((item) => (\n            <tr key={item.id} className=\"Transaction-item\">\n              <td className=\"sheet-data\">{item.type}</td>\n              <td className=\"sheet-data\">{item.amount}</td>\n              <td className=\"sheet-data\">{item.currency}</td>\n            </tr>\n          ))}\n\n          {/* <tr>\n            <td>Withdrawal</td>\n            <td>85</td>\n            <td>USD</td>\n          </tr> */}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nTransactionHistory.propTypes = {};\n\nexport default TransactionHistory;\n","import Profile from \"../Profile/Profile\";\nimport Statistics from \"../Statistics/Statistics\";\nimport FriendList from \"../FriendList/FriendList\";\nimport TransactionHistory from \"../TransactionHistory/TransactionHistory\";\nimport user from \"../Profile/user.json\";\nimport data from \"../Statistics/data.json\";\nimport friends from \"../FriendList/friends.json\";\nimport transactions from \"../TransactionHistory/transactions.json\";\nimport React from \"react\";\n\nconst App = () => {\n  return (\n    <div>\n      <>\n        <Profile user={user} />\n        <Statistics stats={data} />\n        <FriendList friends={friends} />\n        <TransactionHistory items={transactions} />\n      </>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App/App\";\nimport \"./styles/index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}